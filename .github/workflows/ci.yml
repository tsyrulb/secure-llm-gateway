name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.11"
      # Used by scripts/run-smoke.ps1 to mint a JWT and by the API in docker-compose
      JWT_SECRET: dev-secret

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # test tools
          pip install pytest anyio pytest-asyncio

      - name: Unit tests (pytest)
        run: pytest -q

      # ---- Smoke tests (Docker Compose: API + OPA) ----
      - name: Show Docker info
        run: docker version && docker compose version

      - name: Build & start stack (API + OPA)
        run: |
          docker compose down -v || true
          docker compose up -d --build
        env:
          # ensure the API in compose sees the same secret
          JWT_SECRET: ${{ env.JWT_SECRET }}

      - name: Wait for gateway readiness (OPA mode)
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..60}; do
            out="$(curl -sS http://127.0.0.1:8000/readyz || true)"
            echo "readyz: $out"
            # Expect: {"ready":true,"mode":"OPA",...}
            if echo "$out" | grep -q '"ready":true' && echo "$out" | grep -q '"mode":"OPA"'; then
              exit 0
            fi
            sleep 2
          done
          echo "Gateway failed to become ready in OPA mode"
          exit 1

      - name: Smoke tests (PowerShell)
        shell: pwsh
        run: |
          ./scripts/run-smoke.ps1
        env:
          JWT_SECRET: ${{ env.JWT_SECRET }}

      - name: Dump logs on failure
        if: failure()
        run: |
          echo "== OPA logs ==" && docker compose logs opa --tail=200 || true
          echo "== API logs ==" && docker compose logs api --tail=200 || true

      - name: Teardown
        if: always()
        run: docker compose down -v
